../../run-sniper -n 2 -c gainestown --roi -g --dvfs/simple/cores_per_socket=1 -- ./fft -p 2
[SNIPER] Start
[SNIPER] --------------------------------------------------------------------------------
[SNIPER] Sniper using SIFT/trace-driven frontend
[SNIPER] Running pre-ROI region in  CACHE_ONLY mode
[SNIPER] Running application ROI in DETAILED mode
[SNIPER] Running post-ROI region in FAST_FORWARD mode
[SNIPER] --------------------------------------------------------------------------------
[SNIPER] Enabling performance models
[SNIPER] Setting instrumentation mode to DETAILED
[SNIPER] Disabling performance models
[SNIPER] Leaving ROI after 2.95 seconds
[SNIPER] Simulated 1.2M instructions, 1.4M cycles, 0.83 IPC
[SNIPER] Simulation speed 404.7 KIPS (202.3 KIPS / target core - 4942.0ns/instr)
[SNIPER] Sampling: executed 31.00% of simulated time in detailed mode
[SNIPER] Setting instrumentation mode to FAST_FORWARD
[TRACE:0] -- DONE --
[TRACE:1] -- STOP --

FFT with Blocking Transpose
   1024 Complex Doubles
   2 Processors
   65536 Cache lines
   16 Byte line size
   4096 Bytes per page


                 PROCESS STATISTICS
            Computation      Transpose     Transpose
 Proc          Time            Time        Fraction
    0               144             20       0.13889

                 TIMING INFORMATION
Start time                        :      -1844408306
Initialization finish time        :      -1844407922
Overall finish time               :      -1844407778
Total time with initialization    :              528
Total time without initialization :              144
Overall transpose time            :               20
Overall transpose fraction        :          0.13889

[RECORD-TRACE] Using the Pin frontend (sift/recorder)
[SNIPER] End
[SNIPER] Elapsed time: 6.19 seconds


Optional: Run '../../tools/cpistack.py' in this directory to generate cpi-stack output for this run
Optional: Run '../../tools/mcpat.py' in this directory to generate power output for this run
Optional: Run '../../tools/dumpstats.py' in this directory to view detailed statistics for this run
Optional: Run '../../tools/gen_topology.py' in this directory to view the system topology for this run

